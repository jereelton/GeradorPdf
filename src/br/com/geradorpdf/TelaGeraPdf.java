/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.geradorpdf;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author UserMasters
 */
public class TelaGeraPdf extends javax.swing.JFrame {

    /**
     * Creates new form TelaGeraPdf
     */
    public TelaGeraPdf() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nomePdfJTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        localPdfJTextField = new javax.swing.JTextField();
        localizarPdfJButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        conteudoPdfJTextArea = new javax.swing.JTextArea();
        salvarPdfJButton = new javax.swing.JButton();
        cancelarPdfJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerador PDF");

        jLabel1.setText("Nome Arquivo");

        nomePdfJTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Local Arquivo");

        localPdfJTextField.setEditable(false);
        localPdfJTextField.setBackground(new java.awt.Color(255, 255, 255));
        localPdfJTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        localizarPdfJButton.setText("Localizar");
        localizarPdfJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localizarPdfJButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Conteudo do Arquivo");

        conteudoPdfJTextArea.setColumns(20);
        conteudoPdfJTextArea.setRows(5);
        conteudoPdfJTextArea.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setViewportView(conteudoPdfJTextArea);

        salvarPdfJButton.setText("Salvar em PDF");
        salvarPdfJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarPdfJButtonActionPerformed(evt);
            }
        });

        cancelarPdfJButton.setText("Cancelar PDF");
        cancelarPdfJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarPdfJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(nomePdfJTextField)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(localPdfJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(localizarPdfJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(salvarPdfJButton)
                .addGap(28, 28, 28)
                .addComponent(cancelarPdfJButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomePdfJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(localPdfJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(localizarPdfJButton))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salvarPdfJButton)
                    .addComponent(cancelarPdfJButton))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void localizarPdfJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localizarPdfJButtonActionPerformed
        
        UIManager.put("FileChooser.saveButtonText", "Aceitar");
        UIManager.put("FileChooser.saveInLabelText", "Selecionar Local");
        
        JFileChooser arquivo = new JFileChooser();
        arquivo.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int i = arquivo.showSaveDialog(null);
        
        if(i == 1) {
            
            localPdfJTextField.setText("");
            
        } else {
            
            File arq = arquivo.getSelectedFile();
            localPdfJTextField.setText(arq.getPath());
            
        }
        
    }//GEN-LAST:event_localizarPdfJButtonActionPerformed

    private void salvarPdfJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarPdfJButtonActionPerformed
        
        String pdfNome     = nomePdfJTextField.getText();
        String pdfLocal    = localPdfJTextField.getText();
        String pdfConteudo = conteudoPdfJTextArea.getText();
        String pdfAutor    = "Jereelton";
        
        if(pdfNome.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Faltou o nome para definir o arquivo");
            return;
        }
        
        if(pdfLocal.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Faltou o local para salvar o arquivo");
            return;
        }
        
        if(pdfConteudo.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Faltou o conteudo para criar o arquivo");
            return;
        }
        
        GeraPdf arquivoPdf = new GeraPdf();
        arquivoPdf.definirLocalPdf(pdfLocal);
        arquivoPdf.definirNomePdf(pdfNome);
        arquivoPdf.definirConteudoPdf(pdfConteudo);
        arquivoPdf.definirAutorPdf(pdfAutor);
        
        if( arquivoPdf.gerarPdf() ) {
            
            JOptionPane.showMessageDialog(rootPane, "Arquivo "+pdfNome+" gerado com sucesso.\n"+pdfLocal+"\\"+pdfNome+".pdf");
            
            nomePdfJTextField.setText("");
            localPdfJTextField.setText("");
            conteudoPdfJTextArea.setText("");
        }
        
    }//GEN-LAST:event_salvarPdfJButtonActionPerformed

    private void cancelarPdfJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarPdfJButtonActionPerformed
        
        System.exit(0);
        
    }//GEN-LAST:event_cancelarPdfJButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaGeraPdf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaGeraPdf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaGeraPdf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaGeraPdf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaGeraPdf().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelarPdfJButton;
    private javax.swing.JTextArea conteudoPdfJTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField localPdfJTextField;
    private javax.swing.JButton localizarPdfJButton;
    private javax.swing.JTextField nomePdfJTextField;
    private javax.swing.JButton salvarPdfJButton;
    // End of variables declaration//GEN-END:variables
}
